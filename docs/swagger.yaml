basePath: /
definitions:
  domain.Customer:
    properties:
      cpf:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  domain.Order:
    properties:
      created_at:
        type: string
      customer:
        $ref: '#/definitions/domain.Customer'
      id:
        type: string
      notification_attempts:
        type: integer
      notified_at:
        type: string
      products:
        items:
          $ref: '#/definitions/domain.Product'
        type: array
      status:
        type: string
      updated_at:
        type: string
    type: object
  domain.OrderStatus:
    enum:
    - PENDING
    - RECEIVED
    - PAYMENT_FAILED
    - IN_PREPARATION
    - READY
    - COMPLETED
    - CANCELLED
    type: string
    x-enum-varnames:
    - PENDING
    - RECEIVED
    - PAYMENT_FAILED
    - IN_PREPARATION
    - READY
    - COMPLETED
    - CANCELLED
  domain.Product:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      id_category:
        type: string
      ingredients:
        type: string
      price:
        type: number
      product_category:
        $ref: '#/definitions/domain.ProductCategory'
      updated_at:
        type: string
    type: object
  domain.ProductCategory:
    properties:
      description:
        type: string
      id:
        type: string
    type: object
  handlers.CustomerDTO:
    properties:
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  handlers.SignUpCustomerDTO:
    properties:
      cpf:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
  services.CheckoutServiceDTO:
    properties:
      order:
        $ref: '#/definitions/domain.Order'
      orderStatus:
        $ref: '#/definitions/domain.OrderStatus'
      paymentSucceeded:
        type: boolean
    type: object
  services.CreateOrderDTO:
    properties:
      id_customer:
        type: string
      products_id:
        items:
          type: string
        type: array
    type: object
  services.UpdateStatusDTO:
    properties:
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
  description: API for managing products and orders for Backstage Food.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Backstage Food API
  version: "1.0"
paths:
  /categories:
    get:
      description: Get all categories available in the database.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ProductCategory'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all categories
      tags:
      - products
  /checkout/{orderId}:
    post:
      description: If payment succeeded then update order status.
      parameters:
      - description: orderId
        in: path
        name: orderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/services.CheckoutServiceDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Checkout ensure the payment is succeeded.
      tags:
      - checkout
  /customers/{cpf}:
    get:
      description: Identify a customer.
      parameters:
      - description: Customer CPF
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CustomerDTO'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Customer identification
      tags:
      - customers
  /customers/sign-up:
    post:
      description: Create a customer.
      parameters:
      - description: SignUpCustomerDTO object
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/handlers.SignUpCustomerDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CustomerDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Customer sign up
      tags:
      - customers
  /health:
    get:
      description: Check if the server and the database are up and running.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
      tags:
      - health
  /orders:
    get:
      description: Get all orders available in the database.
      parameters:
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order in the database.
      parameters:
      - description: CreateOrderDTO object
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/services.CreateOrderDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/services.CreateOrderDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new order
      tags:
      - orders
  /orders/{id}:
    get:
      description: Get order by its ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Find order by ID
      tags:
      - orders
  /orders/{orderId}:
    delete:
      description: Delete an order in the database.
      parameters:
      - description: orderId
        in: path
        name: orderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an order
      tags:
      - orders
    put:
      description: update order status.
      parameters:
      - description: orderId
        in: path
        name: orderId
        required: true
        type: string
      - description: UpdateStatusDTO object
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/services.UpdateStatusDTO'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: UpdateOrder update order status.
      tags:
      - orders
  /products:
    get:
      description: Get all products available in the database.
      parameters:
      - description: Description
        in: query
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product in the database.
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product from the database.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product
      tags:
      - products
    get:
      description: Get a specific product by its ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Find product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product in the database.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a product
      tags:
      - products
swagger: "2.0"
